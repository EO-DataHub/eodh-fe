on:
  workflow_call:
    inputs:
      canDeployOnDev:
        required: true
        type: boolean
        default: false
      canDeployOnQA:
        required: true
        type: boolean
        default: false
      canDeployOnStaging:
        required: true
        type: boolean
        default: false
      canDeployOnProduction:
        required: true
        type: boolean
        default: false

jobs:
  display:
    runs-on: ubuntu-20.04
    steps:
      - run: echo '${{ toJSON(inputs) }}'
  deployToDev:
    name: 'Dev'
    if: inputs.canDeployOnDev
    runs-on: ubuntu-20.04
    permissions:
      id-token: write
      contents: read
    environment: 'dev'
    steps:
      - name: 'Clone repository'
        uses: actions/checkout@v4
      - uses: ./.github/actions/deploy
  deployToQa:
    name: 'QA'
    if: inputs.canDeployOnQA
    runs-on: ubuntu-20.04
    permissions:
      id-token: write
      contents: read
    environment: 'qa'
    steps:
      - name: 'Clone repository'
        uses: actions/checkout@v4
      - uses: ./.github/actions/deploy
  deployToStaging:
    name: 'Staging'
    needs: [deployToQa]
    if: inputs.canDeployOnStaging
    runs-on: ubuntu-20.04
    permissions:
      id-token: write
      contents: read
    environment: 'staging'
    steps:
      - name: 'Clone repository'
        uses: actions/checkout@v4
      - uses: ./.github/actions/deploy
  deployToProduction:
    name: 'Production'
    needs: [deployToStaging]
    runs-on: ubuntu-20.04
    permissions:
      id-token: write
      contents: read
    environment: 'prod'
    steps:
      - name: 'Clone repository'
        uses: actions/checkout@v4
      - uses: ./.github/actions/deploy
