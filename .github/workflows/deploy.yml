on:
  workflow_call:
    inputs:
      canDeployOnDev:
        required: true
        type: boolean
        default: false
      canDeployOnQA:
        required: true
        type: boolean
        default: false
      canDeployOnStaging:
        required: true
        type: boolean
        default: false
      canDeployOnProduction:
        required: true
        type: boolean
        default: false

jobs:
  deployToDev:
    name: 'Dev'
    if: inputs.canDeployOnDev
    runs-on: ubuntu-20.04
    permissions:
      id-token: write
      contents: read
    environment: 'dev'
    steps:
      - name: 'Clone repository'
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: 'Download build'
        uses: actions/download-artifact@v4
        with:
          name: image-ukri
          path: ${{ github.workspace }}/dist/apps/eodh-fe
      - name: 'Create config file'
        run: npm run config:create
        shell: bash
        env:
          NODE_DIST_PATH: ${{ github.workspace }}/dist/apps/eodh-fe
          VITE_BASE_URL: ${{ vars.APP_BASE_URL }}
          VITE_API_URL: ${{ vars.APP_API_URL }}
          VITE_TRANSLATION_LANGUAGE: ${{ vars.APP_TRANSLATION_LANGUAGE }}
          VITE_TRANSLATION_FALLBACK_LANGUAGE: ${{ vars.APP_TRANSLATION_FALLBACK_LANGUAGE }}
          VITE_AUTHORIZATION_URL: ${{ vars.APP_AUTHORIZATION_URL }}
          VITE_AUTHORIZATION_REALM: ${{ vars.APP_AUTHORIZATION_REALM }}
          VITE_AUTHORIZATION_CLIENT_ID: ${{ vars.APP_AUTHORIZATION_CLIENT_ID }}
      - name: 'Configure AWS credentials'
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-session-name: ${{ vars.AWS_ROLE_SESSION_NAME }}
          aws-region: ${{ vars.AWS_REGION }}
      - name: 'Deploy to S3'
        run: aws s3 cp ${{ github.workspace }}/dist/apps/eodh-fe s3://${{ vars.AWS_BUCKET_NAME }}/ --recursive
      - name: 'Invalidate CloudFront'
        run: aws cloudfront create-invalidation --distribution-id ${{ vars.DISTRIB_ID }} --paths "/*"
  deployToQa:
    name: 'QA'
    if: inputs.canDeployOnQA
    runs-on: ubuntu-20.04
    permissions:
      id-token: write
      contents: read
    environment: 'qa'
    steps:
      - name: 'Clone repository'
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: 'Download build'
        uses: actions/download-artifact@v4
        with:
          name: image-ukri
          path: ${{ github.workspace }}/dist/apps/eodh-fe
      - name: 'Create config file'
        run: npm run config:create
        shell: bash
        env:
          NODE_DIST_PATH: ${{ github.workspace }}/dist/apps/eodh-fe
          VITE_BASE_URL: ${{ vars.APP_BASE_URL }}
          VITE_API_URL: ${{ vars.APP_API_URL }}
          VITE_TRANSLATION_LANGUAGE: ${{ vars.APP_TRANSLATION_LANGUAGE }}
          VITE_TRANSLATION_FALLBACK_LANGUAGE: ${{ vars.APP_TRANSLATION_FALLBACK_LANGUAGE }}
          VITE_AUTHORIZATION_URL: ${{ vars.APP_AUTHORIZATION_URL }}
          VITE_AUTHORIZATION_REALM: ${{ vars.APP_AUTHORIZATION_REALM }}
          VITE_AUTHORIZATION_CLIENT_ID: ${{ vars.APP_AUTHORIZATION_CLIENT_ID }}
      - name: 'Configure AWS credentials'
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-session-name: ${{ vars.AWS_ROLE_SESSION_NAME }}
          aws-region: ${{ vars.AWS_REGION }}
      - name: 'Deploy to S3'
        run: aws s3 cp ${{ github.workspace }}/dist/apps/eodh-fe s3://${{ vars.AWS_BUCKET_NAME }}/ --recursive
      - name: 'Invalidate CloudFront'
        run: aws cloudfront create-invalidation --distribution-id ${{ vars.DISTRIB_ID }} --paths "/*"
  deployToStaging:
    name: 'Staging'
    needs: [deployToQa]
    if: inputs.canDeployOnStaging
    runs-on: ubuntu-20.04
    permissions:
      id-token: write
      contents: read
    environment: 'staging'
    steps:
      - name: 'Clone repository'
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: 'Download build'
        uses: actions/download-artifact@v4
        with:
          name: image-ukri
          path: ${{ github.workspace }}/dist/apps/eodh-fe
      - name: 'Create config file'
        run: npm run config:create
        shell: bash
        env:
          NODE_DIST_PATH: ${{ github.workspace }}/dist/apps/eodh-fe
          VITE_BASE_URL: ${{ vars.APP_BASE_URL }}
          VITE_API_URL: ${{ vars.APP_API_URL }}
          VITE_TRANSLATION_LANGUAGE: ${{ vars.APP_TRANSLATION_LANGUAGE }}
          VITE_TRANSLATION_FALLBACK_LANGUAGE: ${{ vars.APP_TRANSLATION_FALLBACK_LANGUAGE }}
          VITE_AUTHORIZATION_URL: ${{ vars.APP_AUTHORIZATION_URL }}
          VITE_AUTHORIZATION_REALM: ${{ vars.APP_AUTHORIZATION_REALM }}
          VITE_AUTHORIZATION_CLIENT_ID: ${{ vars.APP_AUTHORIZATION_CLIENT_ID }}
      - name: 'Configure AWS credentials'
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-session-name: ${{ vars.AWS_ROLE_SESSION_NAME }}
          aws-region: ${{ vars.AWS_REGION }}
      - name: 'Deploy to S3'
        run: aws s3 cp ${{ github.workspace }}/dist/apps/eodh-fe s3://${{ vars.AWS_BUCKET_NAME }}/ --recursive
      - name: 'Invalidate CloudFront'
        run: aws cloudfront create-invalidation --distribution-id ${{ vars.DISTRIB_ID }} --paths "/*"
  deployToProduction:
    name: 'Production'
    needs: [deployToStaging]
    if: inputs.canDeployOnProduction
    runs-on: ubuntu-20.04
    permissions:
      id-token: write
      contents: read
    environment: 'prod'
    steps:
      - name: 'Clone repository'
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: 'Download build'
        uses: actions/download-artifact@v4
        with:
          name: image-ukri
          path: ${{ github.workspace }}/dist/apps/eodh-fe
      - name: 'Create config file'
        run: npm run config:create
        shell: bash
        env:
          NODE_DIST_PATH: ${{ github.workspace }}/dist/apps/eodh-fe
          VITE_BASE_URL: ${{ vars.APP_BASE_URL }}
          VITE_API_URL: ${{ vars.APP_API_URL }}
          VITE_TRANSLATION_LANGUAGE: ${{ vars.APP_TRANSLATION_LANGUAGE }}
          VITE_TRANSLATION_FALLBACK_LANGUAGE: ${{ vars.APP_TRANSLATION_FALLBACK_LANGUAGE }}
          VITE_AUTHORIZATION_URL: ${{ vars.APP_AUTHORIZATION_URL }}
          VITE_AUTHORIZATION_REALM: ${{ vars.APP_AUTHORIZATION_REALM }}
          VITE_AUTHORIZATION_CLIENT_ID: ${{ vars.APP_AUTHORIZATION_CLIENT_ID }}
      - name: 'Configure AWS credentials'
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-session-name: ${{ vars.AWS_ROLE_SESSION_NAME }}
          aws-region: ${{ vars.AWS_REGION }}
      - name: 'Deploy to S3'
        run: aws s3 cp ${{ github.workspace }}/dist/apps/eodh-fe s3://${{ vars.AWS_BUCKET_NAME }}/ --recursive
      - name: 'Invalidate CloudFront'
        run: aws cloudfront create-invalidation --distribution-id ${{ vars.DISTRIB_ID }} --paths "/*"
